% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/call.R
\name{capture_call}
\alias{capture_call}
\title{Capture the first argument as a call to save for later}
\usage{
capture_call(
  x,
  meta = NULL,
  defaults = list(),
  update = list(),
  delete = character(0),
  envir = parent.frame(),
  eager = TRUE,
  standardise = FALSE
)
}
\arguments{
\item{x}{call object}

\item{meta}{A list of information that may be needed to support the call
before/after its actual evaluation. This is stored as the
'meta' attribute on the call object itself.  The handling of the
meta results during evaluation is user-defined, and nothing is done
automatically.}

\item{defaults}{list of arguments which would act as the default. These will
be superseded by any arguments of the same name that already exist
in the call object \code{x}}

\item{update}{named list of values which override arguments in the call.
Note: "NULL" is \emph{not} used to remove an argument, but will actually
set that argument value to NULL.  If you want to remove an argument, use
\code{delete}.}

\item{delete}{character vector of named arguments to delete.}

\item{envir}{if \code{eager = TRUE} this is the environment for evaluation
of the arguments. Default: \code{parent.frame()} i.e. the environment which
initiated the \code{capture_call()}}

\item{eager}{Eagerly evaluate the arguments to the call. Default: TRUE}

\item{standardise}{standardise the call arguments. default: FALSE.  Setting to
true will try and evaluate the argument in the calling environment.}
}
\description{
Eagerly evaluate all arguments
}
\examples{
cc <- capture_call(mean(x = c(1, 2, 3)), meta = list(var = 'x'))
var_name <- attr(cc, 'meta')$var
assign(var_name, evaluate_call(cc))
var_name
x

}
